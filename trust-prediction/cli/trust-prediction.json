{
    "options": {
        "runtime.db.intids": true
    },
    "rules": [
        // FFpp
        "1.0: Knows(A, B) & Knows(B, C) & Knows(A, C) & Trusts(A, B) & Trusts(B, C) & (A != B) & (B != C) & (A != C) -> Trusts(A, C) ^2",
        // FFpm
        "1.0: Knows(A, B) & Knows(B, C) & Knows(A, C) & Trusts(A, B) & !Trusts(B, C) & (A != B) & (B != C) & (A != C) -> !Trusts(A, C) ^2",
        // FFmp
        "1.0: Knows(A, B) & Knows(B, C) & Knows(A, C) & !Trusts(A, B) & Trusts(B, C) & (A != B) & (B != C) & (A != C) -> !Trusts(A, C) ^2",
        // FFmm
        "1.0: Knows(A, B) & Knows(B, C) & Knows(A, C) & !Trusts(A, B) & !Trusts(B, C) & (A != B) & (B != C) & (A != C) -> Trusts(A, C) ^2",

        // FBpp
        "1.0: Knows(A, B) & Knows(C, B) & Knows(A, C) & Trusts(A, B) & Trusts(C, B) & (A != B) & (B != C) & (A != C) -> Trusts(A, C) ^2",
        // FBpm
        "1.0: Knows(A, B) & Knows(C, B) & Knows(A, C) & Trusts(A, B) & !Trusts(C, B) & (A != B) & (B != C) & (A != C) -> !Trusts(A, C) ^2",
        // FBmp
        "1.0: Knows(A, B) & Knows(C, B) & Knows(A, C) & !Trusts(A, B) & Trusts(C, B) & (A != B) & (B != C) & (A != C) -> !Trusts(A, C) ^2",
        // FBmm
        "1.0: Knows(A, B) & Knows(C, B) & Knows(A, C) & !Trusts(A, B) & !Trusts(C, B) & (A != B) & (B != C) & (A != C) -> Trusts(A, C) ^2",

        // BFpp
        "1.0: Knows(B, A) & Knows(B, C) & Knows(A, C) & Trusts(B, A) & Trusts(B, C) & (A != B) & (B != C) & (A != C) -> Trusts(A, C) ^2",
        // BFpm
        "1.0: Knows(B, A) & Knows(B, C) & Knows(A, C) & Trusts(B, A) & !Trusts(B, C) & (A != B) & (B != C) & (A != C) -> !Trusts(A, C) ^2",
        // BFmp
        "1.0: Knows(B, A) & Knows(B, C) & Knows(A, C) & !Trusts(B, A) & Trusts(B, C) & (A != B) & (B != C) & (A != C) -> !Trusts(A, C) ^2",
        // BFmm
        "1.0: Knows(B, A) & Knows(B, C) & Knows(A, C) & !Trusts(B, A) & !Trusts(B, C) & (A != B) & (B != C) & (A != C) -> Trusts(A, C) ^2",

        // BBpp
        "1.0: Knows(B, A) & Knows(C, B) & Knows(A, C) & Trusts(B, A) & Trusts(C, B) & (A != B) & (B != C) & (A != C) -> Trusts(A, C) ^2",
        // BBpm
        "1.0: Knows(B, A) & Knows(C, B) & Knows(A, C) & Trusts(B, A) & !Trusts(C, B) & (A != B) & (B != C) & (A != C) -> !Trusts(A, C) ^2",
        // BBmp
        "1.0: Knows(B, A) & Knows(C, B) & Knows(A, C) & !Trusts(B, A) & Trusts(C, B) & (A != B) & (B != C) & (A != C) -> !Trusts(A, C) ^2",
        // BBmm
        "1.0: Knows(B, A) & Knows(C, B) & Knows(A, C) & !Trusts(B, A) & !Trusts(C, B) & (A != B) & (B != C) & (A != C) -> Trusts(A, C) ^2",

        "1.0: Knows(A, B) & Knows(B, A) & Trusts(A, B) -> Trusts(B, A) ^2",
        "1.0: Knows(A, B) & Knows(B, A) & !Trusts(A, B) -> !Trusts(B, A) ^2",

        // Two-sided prior.
        "1.0: Knows(A, B) & Prior('0') -> Trusts(A, B) ^2",
        "1.0: Knows(A, B) & Trusts(A, B) -> Prior('0') ^2"
    ],
    "predicates": {
        "Trusts/2": {
            "evaluations": [
                "AUCEvaluator"
            ],
            "observations": {
                "learn": [
                    "../data/trust-prediction/0/learn/trusts_obs.txt"
                ],
                "infer": [
                    "../data/trust-prediction/0/eval/trusts_obs.txt"
                ]
            },
            "targets": {
                "learn": [
                    "../data/trust-prediction/0/learn/trusts_target.txt"
                ],
                "infer": [
                    "../data/trust-prediction/0/eval/trusts_target.txt"
                ]
            },
            "truth": {
                "learn": [
                    "../data/trust-prediction/0/learn/trusts_truth.txt"
                ],
                "infer": [
                    "../data/trust-prediction/0/eval/trusts_truth.txt"
                ]
            }
        },
        "Knows/2": {
            "observations": {
                "learn": [
                    "../data/trust-prediction/0/learn/knows_obs.txt"
                ],
                "infer": [
                    "../data/trust-prediction/0/eval/knows_obs.txt"
                ]
            }
        },
        "Prior/1": {
            "observations": {
                "learn": [
                    "../data/trust-prediction/0/learn/prior_obs.txt"
                ],
                "infer": [
                    "../data/trust-prediction/0/eval/prior_obs.txt"
                ]
            }
        }
    }
}
